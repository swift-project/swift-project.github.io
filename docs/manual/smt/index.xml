<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>swift project â€“ swift mapping tool</title><link>https://swift-project.github.io/docs/manual/smt/</link><description>Recent content in swift mapping tool on swift project</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://swift-project.github.io/docs/manual/smt/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: ACF aircraft (XPlane) excluded in mapping tool</title><link>https://swift-project.github.io/docs/manual/smt/acfexcluded/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/acfexcluded/</guid><description>
&lt;p>See &lt;code>xplanemapping&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;} and
&lt;code>excludedmodels&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/p></description></item><item><title>Docs: Background updater</title><link>https://swift-project.github.io/docs/manual/smt/backupdate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/backupdate/</guid><description>
&lt;p>The background updater allows to automatically reload and consolidate
data in the mapping tool. This helps when other users also create new
mappings and you want to keep your data synchronized with the latest
changes.&lt;/p>
&lt;p>Enable the updater in the settings by entering an update period. You
should see a green LED then.&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/Background_updater.png" alt="image">&lt;/p>
&lt;p>The updater will automatically reload and consolidate, so it is
automatically performing the 2 steps shown below:&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/Reload.png" alt="image">&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/Consolidate.png" alt="image">&lt;/p></description></item><item><title>Docs: Changing / fixing a mapping</title><link>https://swift-project.github.io/docs/manual/smt/changemapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/changemapping/</guid><description>
&lt;p>Let's say you want to fix/change a particular mapping.&lt;/p>
&lt;ul>
&lt;li>locate this mapping in the mapping DB data&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/changemapping1.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>here I find it by its id, but this is is just an example&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/changemapping2.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>you could also find it by other filter criteria&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/changemapping3.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>then you mark this model and stash it, &lt;code>ALT + s&lt;/code> also works&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/changemapping4.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>changing a model requires to login&lt;/li>
&lt;li>now it can be changed in the mapping editor under stashed models&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/changemapping5.png" alt="image">&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/changemapping6.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>and the published&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/changemapping7.png" alt="image">&lt;/p>
&lt;p>Aircraft ICAO codes can be requested here:
&lt;a href="https://datastore.swift-project.org/">https://datastore.swift-project.org/&lt;/a>&lt;/p></description></item><item><title>Docs: Create mappings for swift</title><link>https://swift-project.github.io/docs/manual/smt/createmappings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/createmappings/</guid><description>
&lt;ul>
&lt;li>Tutorials: &lt;code>smttutorials&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;li>&lt;code>effmappings&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;li>&lt;code>cr&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;li>&lt;code>maphints&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;li>&lt;code>problemsmapping&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;/ul>
&lt;p>::: {.important}
::: {.title}
Important
:::&lt;/p>
&lt;p>We recommend to save your stash after you have create the mappings. If
something goes wrong you can reload your work and publish it again.
:::&lt;/p>
&lt;p>&lt;strong>Login&lt;/strong>&lt;/p>
&lt;p>In order to create mappings you need to login within the swift
datastore: In the mapping tool, go to the &amp;quot;Settings and Login&amp;quot; tab,
and login with the DB. After the login you can see your roles as
explained in &lt;code>mappingroles&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/Mapping_tool_login.png" alt="image">&lt;/p>
&lt;p>&lt;strong>Models with/without mapping&lt;/strong>&lt;/p>
&lt;p>Models which already have a database mapping are indicated by a database
icon. You can see that in the screenshot. Normally you need to create
mappings only if it not yet exists.&lt;/p>
&lt;p>It can also happen, that your data are outdated and in the meantime
someone has created a mapping for model, which is not yet shown with the
database icon. You can read more about
&lt;code>data consolidation here &amp;lt;smt&amp;gt;&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}.&lt;/p>
&lt;p>Another good reason to change an existing mapping is if it is wrong. In
this case you can correct the mapping. The procedure (for you) is the
same, regardless if you create a new mapping or modify an existing one.&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/WithAndWithoutMapping.png" alt="image">&lt;/p>
&lt;p>&lt;strong>Direct mappings / Change requests&lt;/strong>&lt;/p>
&lt;p>Users with &amp;quot;bulk&amp;quot; update right and higher (see
[[help/datastore/mappingroles/]]) can directly write to the DB.
Other users will be able to create change requests. For you as a user
there is almost no difference in creating the mapping, only the release
process is different.&lt;/p>
&lt;ul>
&lt;li>Normal users: publish {icon caret-right color=blue} change request
{icon caret-right color=blue} confirmed {icon caret-right
color=blue} in DB&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/Publish_CR_buttons.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>Direct updates:&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/Publish_direct_buttons.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>new mappings: publish {icon caret-right color=blue} in DB&lt;/li>
&lt;li>changed mappings: publish {icon caret-right color=blue} change
request {icon caret-right color=blue} confirmed {icon caret-right
color=blue} in DB&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Mapping confirmation&lt;/strong>&lt;/p>
&lt;p>After you have successfully published your mappings you will see a
&amp;quot;confirmation screen&amp;quot;. You can remove those published models (if you
like) from the stash. Doing so allows you to publish step by step.&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/Publish_confirmation.png" alt="image">&lt;/p>
&lt;p>&lt;strong>Equal mappings&lt;/strong>&lt;/p>
&lt;p>It does not make sense to publish mappings identical to an existing one
in the DB. This would only create unnecessary change requests and work
history entries. Therefor publishing identical entries is rejected. You
will see a message like this in such a case:&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/Backend_no_changes.png" alt="image">&lt;/p>
&lt;p>&lt;strong>Problems?&lt;/strong>&lt;/p>
&lt;p>see &lt;code>problemsmapping&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/p>
&lt;p>::: {.toctree glob=&amp;rdquo;&amp;rdquo; caption=&amp;quot;Content in this chapter&amp;rdquo;}
./*
:::&lt;/p></description></item><item><title>Docs: Distributor preferences</title><link>https://swift-project.github.io/docs/manual/smt/distributorprefs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/distributorprefs/</guid><description>
&lt;p>The distributor preferences can be used to prioritize models if a
certain vendor/distributor.&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/distributorprefs.png" alt="image">&lt;/p>
&lt;p>Read the details under &lt;code>rankmodelset&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/p></description></item><item><title>Docs: Excluded models in mapping tool</title><link>https://swift-project.github.io/docs/manual/smt/excludedmodels/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/excludedmodels/</guid><description>
&lt;p>Some models are marked as x &lt;strong>excluded&lt;/strong> (meaning in that context here,
that the model shall not be used for matching). Typical reasons for that
are:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>XPlane &lt;code>.acf&lt;/code> models (flyable aircraft) cannot be used for matching.
See &lt;code>xplanemapping&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;} .&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Some AI models for FSX/P3D do not show valid aircraft and are
therefor excluded.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Legal reasons might lead to excluded models.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Some models exists, but are known to be buggy/malfunctional or
consume too many resources&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>It is still useful to create mappings for such models!&lt;/strong>, see
&lt;code>reverselookup&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>for automatic flight plan information&lt;/li>
&lt;li>for the login ICAO data&lt;/li>
&lt;li>for reverse lookup between swift clients (more detailed info
used for matching)&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>::: {.important}
::: {.title}
Important
:::&lt;/p>
&lt;p>Normally &lt;strong>excluded&lt;/strong> models are not used in a model set, but there
might be exceptions (we cannot verify all cases)
:::&lt;/p></description></item><item><title>Docs: FSX / P3D specific information</title><link>https://swift-project.github.io/docs/manual/smt/p3dspecific/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/p3dspecific/</guid><description>
&lt;h1 id="p3d-using-aircraft-folders-outside-the-simobjects">P3D: Using aircraft folders outside the simObjects&lt;/h1>
&lt;p>If you need to configure multiple aircraft folders you can do that on
the simulator mappings.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>the settings can be changed&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>in the wizard,&lt;/li>
&lt;li>the pilot client, or&lt;/li>
&lt;li>the mapping tool&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>You can configure multiple model directories&lt;/p>
&lt;/li>
&lt;li>
&lt;p>default values are shown in gray, if you explicitly set directories
those are shown in white&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/Simulator_settings.png" alt="image">&lt;/p>
&lt;h1 id="updating-the-supported-simulators-cross-simulator-updates">Updating the supported simulators (cross simulator updates)&lt;/h1>
&lt;p>Many models work with FSX, FS9, and P3D. It is useful if this
information is properly kept, so the wizards and tool work best.&lt;/p>
&lt;p>You can use the cross simulator tool (FSX, P3D, FS9) to check your local
models, find out which simulator they belong to, and then update the
flags.&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/crosssimupdate.png" alt="image">&lt;/p>
&lt;p>After the run you will see automatically stashed models you can use to
update the database models for the changed flags.&lt;/p></description></item><item><title>Docs: Maintain multiple model sets</title><link>https://swift-project.github.io/docs/manual/smt/maintainmultiplemodelsets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/maintainmultiplemodelsets/</guid><description>
&lt;p>You can keep and save multiple model sets. The idea is that you can
create specialized model sets for events, or just tryout a new set.&lt;/p>
&lt;p>The model set can be saved from the context menu.&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/Save_ModelSet.png" alt="image">&lt;/p>
&lt;p>The model set can be loaded from the context menu or the &amp;quot;load button&amp;quot;
beneath the model set view&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/ModelSet_bar.png" alt="image">&lt;/p></description></item><item><title>Docs: Mapping tool tabs</title><link>https://swift-project.github.io/docs/manual/smt/mttabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/mttabs/</guid><description>
&lt;p>&lt;img src="http://img.swift-project.org/Main_mapping_tool_tabs.png" alt="image">&lt;/p>
&lt;p>Mapping tool tabs:&lt;/p>
&lt;ol>
&lt;li>Mapping editor, see below&lt;/li>
&lt;li>Database data, all data from the mapping database data&lt;/li>
&lt;li>Settings and login, credentials and setup of mapping tool&lt;/li>
&lt;li>Logging, log. messages&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>1 - Mapping editor tabs&lt;/strong>&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/Mapping_tool_tabs.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&amp;quot;Model set&amp;quot;, here you define your model set, those are the models
used for model matching, see also &lt;code>mm&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}
.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&amp;quot;Own models&amp;quot;, these are the models available for your simulator.
The models here correspond with the settings &amp;quot;model directories&amp;quot;
(see below)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&amp;quot;Workbench&amp;quot;, here you can load temporary data and use them for
further actions. This tab allow to load data without affecting your
data of &amp;quot;own models&amp;quot;, &amp;quot;own model set&amp;quot;.&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>Example: An other user can save some models from &amp;quot;his model
set/his models&amp;quot;, you can load and stash them from here.&lt;/li>
&lt;li>&lt;strong>Removed models:&lt;/strong> &lt;em>swift&lt;/em> pilot client allows to save models
which cannot be rendered (this corresponds with &amp;quot;remove from
set&amp;quot;, see below). This allows to later investigate them and
remove them from the model set, if required. If such &amp;quot;removal
lists&amp;quot; are saved, you will see them in the directory browser.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/Removed_models.png" alt="image">&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&amp;quot;Stashed models&amp;quot;, here you modify and prepare mappings for the
database, and eventually upload them to the database.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&amp;quot;Model matcher&amp;quot; allows you to test you model set, so you can
provide various data as they would be received from the FSD protocol
and test what model would be selected.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Mapping tab related functions and settings&lt;/strong>&lt;/p>
&lt;p>Those settings decide which models you use and how the models are used
with matching.&lt;/p>
&lt;ul>
&lt;li>Model directory settings:&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/Model_directory_settings.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>Matching settings:&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/Matching_settings.png" alt="image">&lt;/p>
&lt;p>&lt;strong>2 - Database tab&lt;/strong>&lt;/p>
&lt;p>Displays all database data, and allows to reload DB data. See
&lt;code>reloaddbdata&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;} .&lt;/p>
&lt;p>::: {.toctree glob=&amp;rdquo;&amp;rdquo; caption=&amp;quot;Content in this chapter&amp;rdquo;}
./*
:::&lt;/p></description></item><item><title>Docs: Model Converter X (P3D/FSX family)</title><link>https://swift-project.github.io/docs/manual/smt/mcx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/mcx/</guid><description>
&lt;p>You can view models directly with MCX. MCX is an external tool, see
&lt;a href="http://www.fsdeveloper.com/wiki/index.php?title=ModelConverterX">here&lt;/a>.
It is &lt;strong>not&lt;/strong> part of swift and you have to install it on your own. We
will not be able to provide support for the tool!&lt;/p>
&lt;p>::: {.warning}
::: {.title}
Warning
:::&lt;/p>
&lt;p>Sometimes liveries will not be shown correctly (no idea why)
:::&lt;/p>
&lt;p>In order to enable MCX set its binary (i.e. exe) in the settings, then
you can call it from the context menu. We have tested with the latest
dev. version of MCX.&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/MCX_setting.png" alt="image">&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/MCX_context_menu.png" alt="image">&lt;/p></description></item><item><title>Docs: Problems creating mappings? Some hints</title><link>https://swift-project.github.io/docs/manual/smt/problemsmapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/problemsmapping/</guid><description>
&lt;h1 id="mapping-overlay-messages">Mapping overlay messages&lt;/h1>
&lt;ul>
&lt;li>Use the context menu in the mappings overlay message window to
resize the messages if you cannot read them&lt;/li>
&lt;li>You can save the messages (context menu since 0.8.3) and attach the
save messages to a bug report if needed&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/Publis_data_resize_and_save.png" alt="image">&lt;/p>
&lt;h1 id="models-are-already-in-db-but-not-shown-as-such">Models are already in DB, but not shown as such&lt;/h1>
&lt;p>There are 3 model views: * Own model (you models installed/on disk) *
Own model set, a subset of of your own models * The database view&lt;/p>
&lt;p>There are 2 potential problems: * A user has created/updated a model
very recently, and you have not a local copy yet. So this new model is
not yet shown in the database view. This issue will be resolved after a
data consolidation, a restart of the mapping tool, or when you update
the database view. * A model is shown in the DB tool, but not in own
model set/own models. Check out &lt;code>backupdate&lt;/code>{.interpreted-text
role=&amp;quot;ref&amp;rdquo;} and &lt;code>consolidation&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/p></description></item><item><title>Docs: Ranking (sorting) a model set</title><link>https://swift-project.github.io/docs/manual/smt/rankmodelset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/rankmodelset/</guid><description>
&lt;p>See also &lt;code>createms&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;} ,
&lt;code>tuningset&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/p>
&lt;h1 id="sorting-ranking-a-model-set">Sorting (ranking) a model set&lt;/h1>
&lt;p>Depending on the settings (&lt;code>matchingsettings&lt;/code>{.interpreted-text
role=&amp;quot;ref&amp;rdquo;} ), it can be configured &lt;strong>if two models have the same
matching score, which one is taken&lt;/strong>.&lt;/p>
&lt;p>Just a few hints at the very beginning&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Sorting order of the model set only applies if two models are
calculated &amp;quot;as equal&amp;quot; by the algorithm&lt;/strong>. It depends on the
settings how the calculation is done.&lt;/li>
&lt;li>In general you should ask yourself why you have the same models
multiple times in your set, e.g. why did you add 2 [
B747]{.title-ref} of [DLH]{.title-ref}, so what do you try to
achieve by that? See [[ help/smt/modelsetduplicates/ ]].&lt;/li>
&lt;/ul>
&lt;h1 id="remove-duplicates">Remove duplicates&lt;/h1>
&lt;p>If you have no duplicates there is no real need for ranking, see
&lt;code>modelsetduplicates&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;} . Ranking is needed
if more than one model have the same score, but if you have only one
aircraft/livery combination it is not very likely that this happens.&lt;/p>
&lt;h1 id="manually-ranking">Manually ranking&lt;/h1>
&lt;ul>
&lt;li>You can manually apply a rank by the context menu&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/swift_mapping_tool_-_order_set.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>The rank is displayed in the first column&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/rankorder.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>If you sort by another column it does mean the ranking has changed&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/sortother.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>However, if you like a certain sort order to become your current
ranking, just use &amp;quot;freeze order&amp;quot;. After you will see that the rank
column will change order accordingly&lt;/li>
&lt;/ul>
&lt;h1 id="make-filtered-data-my-model-set">Make filtered data my model set&lt;/h1>
&lt;ul>
&lt;li>If you filter a model set, this is a temporary action and the model
set will not be changed&lt;/li>
&lt;li>If you want to keep the filtered data as your new model set, just
use &amp;quot;materialize&amp;quot; from the context menu&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/materialize.png" alt="image">&lt;/p>
&lt;h1 id="rank-by-distribution-order">Rank by distribution order&lt;/h1>
&lt;p>In order to create a sorted order by distributor you can apply a
distributor ranking&lt;/p>
&lt;ul>
&lt;li>First you need to create preferences by distributor in the settings
of the mapping tool&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/swift_mapping_tool_-_distributor_preferences.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>Then you can apply these preferences&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/swift_mapping_tool_-_apply_distributor_preferences.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>Now you have a sort column for distributors and you can use to
&amp;quot;sort by distributors&amp;quot;&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/sortdistributor.png" alt="image">&lt;/p>
&lt;ul>
&lt;li>Once you are happy with your sorting, you can use &amp;quot;freeze order&amp;quot;&lt;/li>
&lt;/ul>
&lt;p>=== Matching ===&lt;/p>
&lt;p>In order to use the rank you need to enable the setting!&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/ranksettings.png" alt="image">&lt;/p></description></item><item><title>Docs: See and use done mappings</title><link>https://swift-project.github.io/docs/manual/smt/seemymappings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/seemymappings/</guid><description>
&lt;p>If you have created mappings you might wonder how you can see them:&lt;/p>
&lt;p>::: {.important}
::: {.title}
Important
:::&lt;/p>
&lt;p>Normal users creating change request have to wait before we accept the
changes. Before that the are still invisible for you.
:::&lt;/p>
&lt;p>New DB data can always be downloaded via context menu (right mouse)&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/ReloadBacked.png" alt="image">&lt;/p>
&lt;p>If you want to update your models or model set, try &amp;quot;Consolidate&amp;quot;.
This will go to the DB, check for new/changed data and update your
entries.&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/ConsolidateDbData.png" alt="image">&lt;/p></description></item><item><title>Docs: swift mapping tool data consolidation</title><link>https://swift-project.github.io/docs/manual/smt/consolidation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/consolidation/</guid><description>
&lt;p>You will find the consolidation context menu on the model set and own
models tab. See the screenshots below.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>See also: &lt;code>whydataconsolidation&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Consolidation with DB data means, that the latest DB data on your
disk (you can use the launcher to update those files) will be used
and merged with your model or model set data. This is useful
whenever new DB data are available.&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>Hint : When you start the mapping tool the latest DB data will
always be downloaded&lt;/li>
&lt;li>Another way to obtain the DB data is with the launcher, see
&lt;code>launcher&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;li>You can keep your mapping tool data up to date while working
with the &lt;code>backupdate&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>Consolidation with &amp;quot;own models&amp;quot; data means that the latest data
from your own models installed will be merged with the data in the
model set. This is required only when the model data on your disk
change.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="http://img.swift-project.org/Models_Consolidate.png" alt="image">&lt;/p>
&lt;p>&lt;img src="http://img.swift-project.org/Set_Consolidate.png" alt="image">&lt;/p></description></item><item><title>Docs: swift mapping tool tutorials (YouTube videos)</title><link>https://swift-project.github.io/docs/manual/smt/smttutorials/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/smttutorials/</guid><description>
&lt;p>&lt;code>pctutorials&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/p>
&lt;p>::: {.important}
::: {.title}
Important
:::&lt;/p>
&lt;p>Enable CC and HD for YouTube to see closed captions and reasonable
quality
:::&lt;/p>
&lt;ul>
&lt;li>Playlist:
&lt;a href="https://www.youtube.com/playlist?list=PLHQ0-JnmgGSirFPAO3EmI2orpAwR49dbJ">Youtube&lt;/a>&lt;/li>
&lt;li>mapping tool window handling &lt;a href="https://youtu.be/Xkr_tYGlHfA">https://youtu.be/Xkr_tYGlHfA&lt;/a>&lt;/li>
&lt;li>mapping tool fundamentals &lt;a href="https://youtu.be/ybUGvrkXfCg">https://youtu.be/ybUGvrkXfCg&lt;/a>&lt;/li>
&lt;li>mapping tool filters &lt;a href="https://youtu.be/GbCaHpFP_jw">https://youtu.be/GbCaHpFP_jw&lt;/a>&lt;/li>
&lt;li>1st model set &lt;a href="https://youtu.be/qR39IjDFwEE">https://youtu.be/qR39IjDFwEE&lt;/a>&lt;/li>
&lt;li>mapping distributor / aircraft ICAO &lt;a href="https://youtu.be/_pXn1tvYiyY">https://youtu.be/_pXn1tvYiyY&lt;/a>&lt;/li>
&lt;li>mapping color livery &lt;a href="https://youtu.be/iQoP96NlPcU">https://youtu.be/iQoP96NlPcU&lt;/a>&lt;/li>
&lt;li>save stash &lt;a href="https://youtu.be/0eu8bMpzkRk">https://youtu.be/0eu8bMpzkRk&lt;/a>&lt;/li>
&lt;li>publish &lt;a href="https://youtu.be/EVBjzKQkOy4">https://youtu.be/EVBjzKQkOy4&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Why is data consolidation needed?</title><link>https://swift-project.github.io/docs/manual/smt/whydataconsolidation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/whydataconsolidation/</guid><description>
&lt;p>::: {.note}
::: {.title}
Note
:::&lt;/p>
&lt;p>Consolidation means your model data from the simulator will be merged
with the DB data into a more detailed data set.
:::&lt;/p>
&lt;ul>
&lt;li>
&lt;p>When you start the mapping tool and read the installed models the
current DB data will be used&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This also applies when you create the model set (the current DB data
are used)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>But other users (or yourself) can change the DB data at a later time
to:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>Create new mappings&lt;/li>
&lt;li>Modify/correct existing mappings&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>Applying those changes requires consolidating your model data with
the latest DB data. There are multiple ways to accomplish this&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>Manually via the context menu:
&lt;code>consolidation&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;li>Automatically in background: &lt;code>backupdate&lt;/code>{.interpreted-text
role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;li>During the model update for the client, see
&lt;code>updatemodeldata&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: XPlane specific information</title><link>https://swift-project.github.io/docs/manual/smt/xplanemapping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swift-project.github.io/docs/manual/smt/xplanemapping/</guid><description>
&lt;h1 id="csl-vs-acf-aircraft">CSL vs. &lt;code>.acf&lt;/code> aircraft&lt;/h1>
&lt;ul>
&lt;li>Like &lt;em>XSquawkBox&lt;/em>, we render &lt;code>CSL&lt;/code> models to represent the remote
aircraft (other pilots).&lt;/li>
&lt;li>There is a distinction between &lt;code>CSL&lt;/code> and the aircraft that the local
user flies (the &lt;code>.acf&lt;/code> aircraft).&lt;/li>
&lt;li>One cannot fly a &lt;code>CSL&lt;/code>, and we cannot render a &lt;code>.acf&lt;/code>.&lt;/li>
&lt;li>We need both in the database, but we can not use &lt;code>.acf&lt;/code> to render
remote aircraft.&lt;/li>
&lt;li>So [.acf]{.title-ref} aircraft are x &lt;strong>excluded&lt;/strong>, which prevents
them being used for rendering.&lt;/li>
&lt;li>ACF aircraft with X normally do not belong in the model set (do not
confuse model set and own models, we talk about the model set here)&lt;/li>
&lt;li>But we use the &lt;code>.acf&lt;/code> in the database so we know which plane the
local user is flying, so we can pass that info to the other clients
on the network.&lt;/li>
&lt;li>See also &lt;code>excludedmodels&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;li>Do we need mappings for [ACF]{.title-ref} models? Yes, see
&lt;code>excludedmodels&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;/ul>
&lt;h1 id="model-directories">Model directories&lt;/h1>
&lt;ul>
&lt;li>One can install CSL models wherever you want.&lt;/li>
&lt;li>In the mapping tool, simulator settings panel, you direct swift
where to search for them, by adding to the list of model
directories.&lt;/li>
&lt;li>All subdirectories of your X-Plane directory are already selected.&lt;/li>
&lt;li>For your own (non-CSL) models, &lt;code>[ACF]&lt;/code> and excluded should be
automatically added by default when the mapping tool discovers the
models.&lt;/li>
&lt;/ul>
&lt;h1 id="vertical-offset-fix">Vertical offset fix&lt;/h1>
&lt;ul>
&lt;li>Install the vertical offset fix for BlueBell models if needed, see
&lt;code>troubleshooting&lt;/code>{.interpreted-text role=&amp;quot;ref&amp;rdquo;}&lt;/li>
&lt;/ul></description></item></channel></rss>